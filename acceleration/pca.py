#coding=utf-8#########################################  # pca: 降维处理 # 用法说明：输入：原始数据，功能：降维处理，输出：降维后的矩阵     #########################################  import numpy as npimport randomimport mathimport matplotlib.pyplot as pltfrom numpy import *from collections import Counterfrom gen_feature import *def pca(eigen_fact_matrix,contribute):        #主成分分析        eigen_matrix = eigen_fact_matrix[:,:12] #12维特征根        eigen_matrix_new = eigen_matrix - eigen_matrix.mean(0) #标准化处理          cov=np.cov(eigen_matrix_new.T)  #相关系数矩阵        eig,vec = np.linalg.eig(cov) #特征根        eig_sort=np.argsort(eig) #排序         contribute = 0        sum_eig = sum(eig)         for i in list(eig_sort[::-1]):            contribute_sum += eig[i]/sum_eig            if contribute_sum > contribute:                index = list(eig_sort[::-1]).index(i)                print index+1                break        print contribute        lowmatrix = dot(eigen_matrix_new,vec[eig_sort[-1:-(index+2):-1]].T)        reconmatrix = dot(lowmatrix,vec[eig_sort[-1:-(index+2):-1]]) + eigen_matrix.mean(0)[None,:]        print reconmatrix.shape        return lowmatrix            if __name__=='__main__':    filename = 'D:/sensor_data/dataset_606666/606666/CenceMeRawData2/CenceMeLiteLog7.txt'    eigen_fact_matrix = filedata(filename)    contribute = 0.85    lowmatrix = pca(eigen_fact_matrix,contribute)    dataSet = np.append( lowmatrix, eigen_fact_matrix[:,-1][:,None], 1)#主成分分析后    filename1='D:/sensor_data/dataset_606666/606666/CenceMeRawData2/pca_data7.txt'    f1=open(filename1,'w')    for i in dataSet:            f1.write(str(list(i))+'\n')    f1.close()     